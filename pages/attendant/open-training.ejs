<!DOCTYPE html>
<html lang="en">

<head>
  <%- include('../../partials/head'); %>
  <!-- Data table -->
  <link rel="stylesheet" type="text/css" href="/public/css/jquery.dataTables.css">
  <script type="text/javascript" charset="utf8" src="/public/js/jquery.dataTables.js">
  </script>
  <!--/ Data table -->
  <script type="text/javascript" charset="utf8" src="/public/js/custom.date.js"></script>
  <link rel="stylesheet" type="text/css" href="/public/css/home.css">
</head>

<body onload="getBasicInfo()">
  <%- include("../../partials/topnav.ejs", { "location": "open-training" }) %>
  <%- include("./header.attendant.ejs") %>
  <div class="container">
    <section>
      <div class="container py-4">
        <div class="row d-flex align-items-center justify-content-center">
          <div class="w-100">
            <div class="col-md-12 text-right">
              <!-- <button onclick="saveCoupon()" class="btn btn-primary">Registrar cup√≥n</button> -->
            </div>
            <div id="loading"></div>
            <h2><%= translation.ATTENDANT_OPEN_TRAINING.RESERVATIONS %></h2>
            <div id="appointments">
            </div>
            <h2><%= translation.ATTENDANT_OPEN_TRAINING.NEXT_DATES %></h2>
            <div id="availableAppointments">
              <table id="availableAppointments-list">
                <thead>
                  <tr>
                    <th><%= translation.ATTENDANT_OPEN_TRAINING.START_DATE %></th>
                    <th><%= translation.ATTENDANT_OPEN_TRAINING.TOPIC %></th>
                    <th><%= translation.ATTENDANT_OPEN_TRAINING.RESERVE %></th>
                  </tr>
                </thead>
              </table>
            </div>
          </div>
        </div>
        <div>
          <%- include("../../partials/footer.ejs") %>
        </div>
      </div>
    </section>
  </div>
</body>
<script type="text/javascript" charset="utf8" src="/public/js/custom.home.js"></script>
<script>
  const availableAppointments = document.getElementById('availableAppointments');
  const appointments = document.getElementById('appointments');

  function getBasicInfo() {
    const myHeaders = new Headers();
    myHeaders.append('Content-Type', 'application/json');

    fetch('/api/v1/profile/open-training', {
      headers: myHeaders,
      credentials: "same-origin"
    })
      .then(res => res.json())
      .then(res => parseAvailableAppointments(res))
      .catch(err => {
        console.error(err);
      });
    fetch('/api/v1/profile/appointments?isOpen=true', {
      headers: myHeaders,
      credentials: "same-origin"
    })
      .then(res => res.json())
      .then(res => parseAppointments(res))
      .catch(err => {
        console.error(err);
      });
  }

  function fixOpenTraining(availableAppointmentId, serviceName, datetime) {
    if (!confirm(`<%= translation.ATTENDANT_OPEN_TRAINING.LABEL_1 %> ${serviceName} <%= translation.ATTENDANT_OPEN_TRAINING.FOR %> ${datetime}?`)) {
      return;
    }
    displayLoading();
    const myHeaders = new Headers();
    myHeaders.append('Content-Type', 'application/json');

    fetch(`/api/v1/profile/fix-open-training/${availableAppointmentId}`, {
      headers: myHeaders,
      credentials: "same-origin",
      method: 'post'
    })
      .then(res => {
        if (res.status === 201) {
          alert('<%= translation.ATTENDANT_OPEN_TRAINING.LABEL_2 %>');
        } else {
          alert('<%= translation.ATTENDANT_OPEN_TRAINING.LABEL_3 %>');
        }
        location.reload(true);
      })
      .catch(err => {
        console.error(err);
      })
      .finally(() => {
        hideLoading();
      });
  }

  function parseAvailableAppointments(res) {
    let availableAppointmentsTable = $('#availableAppointments-list').DataTable({
      "ordering": false,
      "sDom": 'lrtip',
      "dom": '<"top"i>rt<"bottom"p><"clear">'
    });
    res.forEach(availableAppointment => {
      let appointmentStartDatetime = new Date(availableAppointment.appointmentStartDatetime);
      let appointmentFinishDatetime = new Date(availableAppointment.appointmentFinishDatetime);
      let startDatetime = parseDateToJson(appointmentStartDatetime);
      let finishDatetime = parseDateToJson(appointmentFinishDatetime);
      let serviceName = availableAppointment.service.name;
      let availableAppointmentId = availableAppointment.id;
      let sessionType = availableAppointment.sessionType === "remote" ? "<%= translation.ATTENDANT_OPEN_TRAINING.REMOTE %>" : "<%= translation.ATTENDANT_OPEN_TRAINING.PRESENTIAL %>";
      let state = availableAppointment.state;
      let country = availableAppointment.state.country;
      let location = availableAppointment.sessionType === "remote" ? country.name : `${country.name} ${state.name}`;

      availableAppointmentsTable
        .row
        .add([
          `${startDatetime.stringDate} ${startDatetime.formatTime} - ${finishDatetime.stringDate} ${finishDatetime.formatTime}`,
          `${serviceName} - ${sessionType} - ${location}`,
          `<img style="cursor:pointer;" onclick="fixOpenTraining(${availableAppointmentId},'${serviceName}','${startDatetime.stringDate} ${startDatetime.formatTime}')" src="/public/img/book.png" alt="<%= translation.ATTENDANT_OPEN_TRAINING.SCHEDULE %>" width="30px"/>`
        ])
        .draw()
        .node();
    });
  }

  function parseAppointments(res) {
    const appointmentsTemplate = res.map(appointment => {
      const appointmentHash = appointment.hash;
      const meetingUrl = appointment.available.meetingUrl;
      const appointmentStartDatetime = new Date(appointment.available.appointmentStartDatetime);
      const appointmentFinishDatetime = new Date(appointment.available.appointmentFinishDatetime);
      const month = months[appointmentStartDatetime.getMonth()];
      const weekDay = weekDays[appointmentStartDatetime.getDay()];
      const startDatetime = parseDateToJson(appointmentStartDatetime);
      const finishDatetime = parseDateToJson(appointmentFinishDatetime);

      const serviceName = appointment.available.service.name;
      const serviceCategoryName = appointment.available.service.serviceCategory.name;
      const serviceCategoryDescription = appointment.available.service.serviceCategory.description;
      const sessionType = appointment.available.sessionType === "remote" ? "<%= translation.ATTENDANT_OPEN_TRAINING.REMOTE %>" : "<%= translation.ATTENDANT_OPEN_TRAINING.PRESENTIAL %>";
      const state = appointment.available.state;
      const country = appointment.available.state.country;
      const location = appointment.available.sessionType === "remote" ? country.name : `${country.name} ${state.name}`;
      const linkTitle = appointment.available.sessionType === "remote" ? "<%= translation.ATTENDANT_OPEN_TRAINING.ENTER_CONFERENCE %>" : "<%= translation.ATTENDANT_OPEN_TRAINING.DIRECTION %>";

      const cardTemplate = `<div class="card-1">
        <div class="d-flex flex-wrap justify-content-center">
          <div class="p-2">
            <div class="calendar-ico">
              <div>${month}</div>
              <div>${appointmentStartDatetime.getDate()}</div>
              <div>${weekDay}</div>
            </div>
          </div>
          <div class="p-2">
            <div class="cell-1">
              <div><a href="/appointment/${appointmentHash}">${serviceName}</a></div>
              <div>${sessionType} - ${location}</div>
              <table>
                <tr>
                  <td><%= translation.ATTENDANT_OPEN_TRAINING.DATE %> </td>
                  <td>${startDatetime.stringDate} ${startDatetime.formatTime} - ${finishDatetime.stringDate} ${finishDatetime.formatTime}</td>
                </tr>
              </table>
            </div>
          </div>
          <div class="ml-auto p-2">
            <div class="cell-2">
              ${meetingUrl ? `<a target="_blank" class="btn btn-info" href="${meetingUrl}">${linkTitle}</a>` : '<p style="font-style: italic;color: #999999;"><%= translation.ATTENDANT_OPEN_TRAINING.LABEL_4 %></p>'}
            </div>
          </div>
        </div>
      </div>`;
      return cardTemplate;
    });

    if (appointmentsTemplate && appointmentsTemplate.length > 0) {
      appointments.innerHTML = appointmentsTemplate.join('\n');
    } else {
      appointments.innerHTML = '<p><%= translation.ATTENDANT_OPEN_TRAINING.LABEL_5 %></p>'
    }

  }
</script>

</html>